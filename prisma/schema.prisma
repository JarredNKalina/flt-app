generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Question {
  id                String             @id @default(uuid())
  question          String
  difficulty        Difficulty
  isNiche           Boolean            @default(false)
  type              QuestionType
  answerId          String
  status            Status
  answer            TextOption         @relation(fields: [answerId], references: [id])
  falseTextOptions  FalseTextOption[]
  falseImageOptions FalseImageOption[]
  questionTags      QuestionTag[]
  rejections        Rejection[]
}

model Tag {
  id           String        @id @default(uuid())
  name         String        @unique
  questionTags QuestionTag[]
}

model QuestionTag {
  questionId String
  tagId      String

  question Question @relation(fields: [questionId], references: [id])
  tag      Tag      @relation(fields: [tagId], references: [id])

  @@id([questionId, tagId])
}

model FalseTextOption {
  questionId String
  answerId   String

  question Question   @relation(fields: [questionId], references: [id])
  answer   TextOption @relation(fields: [answerId], references: [id])

  @@id([questionId, answerId])
}

model FalseImageOption {
  questionId String
  answerId   String

  question Question    @relation(fields: [questionId], references: [id])
  answer   ImageOption @relation(fields: [answerId], references: [id])

  @@id([questionId, answerId])
}

model TextOption {
  id   String @id @default(uuid())
  text String

  questions        Question[]
  falseTextOptions FalseTextOption[]
}

model ImageOption {
  id     String @id @default(uuid())
  url    String
  height BigInt
  width  BigInt
  size   BigInt

  falseImageOptions FalseImageOption[]
}

model Rejection {
  id         String   @id @default(uuid())
  questionId String
  reason     String
  question   Question @relation(fields: [questionId], references: [id])
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}

enum Status {
  APPROVED
  PENDING
  REJECTED
}

enum QuestionType {
  TEXT
  IMAGE
}
